g_a_b :=
  [|[| 1, 0, 0, 0 |],
    [| 0, 1, 0, 0 |],
    [| 0, 0, 1, 0 |],
    [| 0, 0, 0, 1 |]|]

A_α :=
  [|-- A_1
    [|[| 0, 1, 0, 0 |],
      [| -1, 0, 0, 0 |],
      [| 0, 0, 0, -1 |],
      [| 0, 0, 1, 0 |]|],
    -- A_2
    [|[| 0, 0, 1, 0 |],
      [| 0, 0, 0, 1 |],
      [| -1, 0, 0, 0 |],
      [| 0, -1, 0, 0 |]|],
    -- A_3
    [|[| 0, 0, 0, 1 |],
      [| 0, 0, -1, 0 |],
      [| 0, 1, 0, 0 |],
      [| -1, 0, 0, 0 |]|]|]

R_a_b_c_d := generateTensor 4#0 [4, 4, 4, 4]

R'_i_j_k_l := (generateTensor
  (\i j k l -> match (i, j, k, l) as (integer, integer, integer, integer) with
     | (?1#(%1 >= 4), ?1#(%1 >= 4), ?1#(%1 >= 4), ?1#(%1 >= 4))
       -> let (a, b, c, d) := (i - 3, j - 3, k - 3, l - 3)
            in R_a_b_c_d - sum (map (\α -> p_α^2 * A_α_b_c * A_α_a_d) [1, 2, 3])
                         + sum (map (\α -> p_α^2 * A_α_a_c * A_α_b_d) [1, 2, 3])
                         + sum (map (\α -> 2 * p_α^2 * A_α_a_b * A_α_c_d) [1, 2, 3])
     | (?1#(%1 >= 4), ?1#(%1 >= 4), ?1#(%1 >= 4), ?1#(%1 <= 3))
       -> let (a, b, c, α) := (i - 3, j - 3, k - 3, l)
            in 0
     | (?1#(%1 >= 4), ?1#(%1 <= 3), ?1#(%1 >= 4), ?1#(%1 >= 4)) -- R_i_j_k_l = R_k_l_i_j
       -> let (c, α, a, b) := (i - 3, j, k - 3, l - 3)
            in 0
     | (?1#(%1 <= 3), ?1#(%1 >= 4), ?1#(%1 >= 4), ?1#(%1 >= 4)) -- R_i_j_k_l = - R_j_i_k_l
       -> let (α, c, a, b) := (i, j - 3, k - 3, l - 3)
            in 0
     | (?1#(%1 >= 4), ?1#(%1 >= 4), ?1#(%1 <= 3), ?1#(%1 >= 4)) -- R_i_j_k_l = - R_k_l_j_i
       -> let (a, b, α, c) := (i - 3, j - 3, k, l - 3)
            in 0
     | (?1#(%1 >= 4), ?1#(%1 >= 4), ?1#(%1 <= 3), ?1#(%1 <= 3))
       -> let (a, b, α, β) := (i - 3, j - 3, k, l)
            in 2 * p_α * p_β * A_β_a~c . A_α_b~d . g_c_d
     | (?1#(%1 <= 3), ?1#(%1 <= 3), ?1#(%1 >= 4), ?1#(%1 >= 4)) -- R_i_j_k_l = R_k_l_i_j 　(R_1_2_4_7, R_1_1_4_4)
       -> let (α, β, a, b) := (i, j, k - 3, l - 3)
            in 2 * p_α * p_β * A_β_a~c . A_α_b~d . g_c_d
     | (?1#(%1 >= 4), ?1#(%1 <= 3), ?1#(%1 <= 3), ?1#(%1 >= 4)) --                         (R_4_1_2_7, R_4_1_1_4)
       -> let (a, α, β, b) := (i - 3, j, k, l - 3)
            in withSymbols [e] -1 * p_α * p_β * A_α_b~e . A_β_a_e
     | (?1#(%1 <= 3), ?1#(%1 >= 4), ?1#(%1 <= 3), ?1#(%1 >= 4)) -- R_i_j_k_l = - R_j_i_k_l (R_2_4_1_7, R_1_4_1_4)
       -> let (α, a, β, b) := (i, j - 3, k, l - 3)
            in withSymbols [e] p_α * p_β * A_α_b~e . A_β_a_e
     | (?1#(%1 <= 3), ?1#(%1 >= 4), ?1#(%1 >= 4), ?1#(%1 <= 3)) -- R_i_j_k_l = - R_j_i_k_l
       -> let (β, b, a, α) := (i, j - 3, k - 3, l)
            in withSymbols [e] p_α * p_β * A_α_b~e . A_β_a_e
     | (?1#(%1 <= 3), ?1#(%1 >= 4), ?1#(%1 <= 3), ?1#(%1 >= 4)) -- R_i_j_k_l = - R_k_l_j_i
       -> let (β, b, α, a) := (i, j - 3, k, l - 3)
            in withSymbols [e] -1 * p_α * p_β * A_α_b~e . A_β_a_e
     | (_, _, _, _) -> 0)
  [7, 7, 7, 7])_i_j_k_l

J_i_j_k_l := R'_i_j_k_l + R'_j_k_i_l + R'_k_i_j_l

"J_1_2_4_7"
J_1_2_4_7
R'_1_2_4_7 -- -2 * p_1 * p_2
R'_2_4_1_7 -- -1 * p_2 * p_1
R'_4_1_2_7 -- -1 * p_1 * p_2

"J_1_4_1_4"
J_1_4_1_4
R'_1_4_1_4 -- p_1^2
R'_4_1_1_4 -- -1 * p_1^2
R'_1_1_4_4 -- 2 * p_1^2

p_1 * p_1 * A_1_4~c . A_1_4~d . g_c_d

A_1_4~c
A_1_4~c . A_1_4~d

--J_#_#_#_#
