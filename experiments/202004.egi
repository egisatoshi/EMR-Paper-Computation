g :=
  [|[| 1, 0, 0, 0 |],
    [| 0, 1, 0, 0 |],
    [| 0, 0, 1, 0 |],
    [| 0, 0, 0, 1 |]|]

g' :=
  [|[| 1, 0, 0, 0, 0, 0, 0 |],
    [| 0, 1, 0, 0, 0, 0, 0 |],
    [| 0, 0, 1, 0, 0, 0, 0 |],
    [| 0, 0, 0, 1, 0, 0, 0 |],
    [| 0, 0, 0, 0, 1, 0, 0 |],
    [| 0, 0, 0, 0, 0, 1, 0 |],
    [| 0, 0, 0, 0, 0, 0, 1 |]|]

A_α :=
  [|-- A_1
    [|[| 0, 1, 0, 0 |],
      [| -1, 0, 0, 0 |],
      [| 0, 0, 0, -1 |],
      [| 0, 0, 1, 0 |]|],
    -- A_2
    [|[| 0, 0, 1, 0 |],
      [| 0, 0, 0, 1 |],
      [| -1, 0, 0, 0 |],
      [| 0, -1, 0, 0 |]|],
    -- A_3
    [|[| 0, 0, 0, 1 |],
      [| 0, 0, -1, 0 |],
      [| 0, 1, 0, 0 |],
      [| -1, 0, 0, 0 |]|]|]

R_a_b_c_d := generateTensor 4#0 [4, 4, 4, 4]

-- {\bar R}_{ab \alpha \beta} 
--   = p_\alpha p_\beta (-g_{cd} A_{\beta, a}^{c} A_{\alpha , b}^{d} 
--     + g_{cd} A_{\beta, b}^{c} A_{\alpha , a}^{d} ) 
-- {\bar R}_{a \alpha b \beta} 
--   = - p_\alpha p_\beta g_{cd} A_{\beta, a}^{c} A_{\alpha , b}^{d} 

R'_i_j_k_l := (generateTensor
  (\i j k l -> match (i, j, k, l) as (integer, integer, integer, integer) with
     | (?1#(%1 >= 4), ?1#(%1 >= 4), ?1#(%1 >= 4), ?1#(%1 >= 4))
       -> let (a, b, c, d) := (i - 3, j - 3, k - 3, l - 3)
            in R_a_b_c_d - sum (map (\α -> p_α^2 * A_α_b_c * A_α_a_d) [1, 2, 3])
                         + sum (map (\α -> p_α^2 * A_α_a_c * A_α_b_d) [1, 2, 3])
                         + sum (map (\α -> 2 * p_α^2 * A_α_a_b * A_α_c_d) [1, 2, 3])
     | (?1#(%1 >= 4), ?1#(%1 >= 4), ?1#(%1 >= 4), ?1#(%1 <= 3)) -- R_a_b_c_α
       -> let (a, b, c, α) := (i - 3, j - 3, k - 3, l)
            in 0
     | (?1#(%1 >= 4), ?1#(%1 <= 3), ?1#(%1 >= 4), ?1#(%1 >= 4)) -- R_c_α_a_b (= R_a_b_c_α)
       -> let (c, α, a, b) := (i - 3, j, k - 3, l - 3)
            in 0
     | (?1#(%1 <= 3), ?1#(%1 >= 4), ?1#(%1 >= 4), ?1#(%1 >= 4)) -- R_α_c_a_b (= - R_a_b_c_α)
       -> let (α, c, a, b) := (i, j - 3, k - 3, l - 3)
            in 0
     | (?1#(%1 >= 4), ?1#(%1 >= 4), ?1#(%1 <= 3), ?1#(%1 >= 4)) -- R_a_b_α_c (= - R_a_b_c_α)
       -> let (a, b, α, c) := (i - 3, j - 3, k, l - 3)
            in 0
     | (?1#(%1 >= 4), ?1#(%1 >= 4), ?1#(%1 <= 3), ?1#(%1 <= 3)) -- R_a_b_α_β
       -> let (a, b, α, β) := (i - 3, j - 3, k, l)
            in p_α * p_β * (-1 * g_c_d . A_β_a~c . A_α_b~d + g_c_d . A_β_b~c . A_α_a~d)
     | (?1#(%1 <= 3), ?1#(%1 <= 3), ?1#(%1 >= 4), ?1#(%1 >= 4)) -- R_α_β_a_b (= R_a_b_α_β)
       -> let (α, β, a, b) := (i, j, k - 3, l - 3)
            in p_α * p_β * (-1 * g_c_d . A_β_a~c . A_α_b~d + g_c_d . A_β_b~c . A_α_a~d)
     | (?1#(%1 >= 4), ?1#(%1 <= 3), ?1#(%1 <= 3), ?1#(%1 >= 4)) -- R_a_α_β_b (= - R_a_b_α_β)
       -> let (a, α, β, b) := (i - 3, j, k, l - 3)
            in withSymbols [e] p_α * p_β * g_c_d . A_β_a~c . A_α_b~d
     | (?1#(%1 <= 3), ?1#(%1 >= 4), ?1#(%1 <= 3), ?1#(%1 >= 4)) -- R_α_a_β_b (= R_a_b_α_β)
       -> let (α, a, β, b) := (i, j - 3, k, l - 3)
            in withSymbols [e] -1 * p_α * p_β * g_c_d . A_β_a~c . A_α_b~d
     | (?1#(%1 <= 3), ?1#(%1 >= 4), ?1#(%1 >= 4), ?1#(%1 <= 3)) -- R_β_b_a_α (= -1 R_a_b_α_β)
       -> let (β, b, a, α) := (i, j - 3, k - 3, l)
            in withSymbols [e] p_α * p_β * g_c_d . A_β_a~c . A_α_b~d
     | (?1#(%1 >= 4), ?1#(%1 <= 3), ?1#(%1 >= 4), ?1#(%1 <= 3)) -- R_a_α_b_β (= R_a_b_α_β)
       -> let (a, α, b, β) := (i - 3, j, k - 3, l)
            in withSymbols [e] -1 * p_α * p_β * g_c_d . A_β_a~c . A_α_b~d
     | (?1#(%1 <= 3), ?1#(%1 >= 4), ?1#(%1 <= 3), ?1#(%1 >= 4)) -- R_β_b_α_a (= -1 R_a_b_α_β)
       -> let (β, b, α, a) := (i, j - 3, k, l - 3)
            in withSymbols [e] p_α * p_β * g_c_d . A_β_a~c . A_α_b~d
     | (_, _, _, _) -> 0)
  [7, 7, 7, 7])_i_j_k_l

R'_i_j_k~l := withSymbols [m] R'_i_j_k_m . g'~m~l

J_i_j_k_l := R'_i_j_k_l + R'_j_k_i_l + R'_k_i_j_l

assertEqual "Jacob"
  J_#_#_#_#
  (generateTensor 4#0 [7, 7, 7, 7])_#_#_#_#

CSW := let (es, os) := evenAndOddPermutations 7
  in withSymbols [l] sum (map (\σ -> debug (R'_(σ 1)_(l_1)_1~(l_0) . R'_(σ 2)_(σ 3)_(l_2)~(l_1) . R'_(σ 4)_(σ 5)_(l_3)~(l_2) . R'_(σ 6)_(σ 7)_(l_0)~(l_3))) es) -
                     sum (map (\σ -> debug (R'_(σ 1)_(l_1)_1~(l_0) . R'_(σ 2)_(σ 3)_(l_2)~(l_1) . R'_(σ 4)_(σ 5)_(l_3)~(l_2) . R'_(σ 6)_(σ 7)_(l_0)~(l_3))) os)

CSW